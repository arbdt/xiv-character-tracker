{"version":3,"sources":["logo.png","components/Header.js","components/Footer.js","components/ClassJob.js","components/CharacterSheet.js","components/UserPage.js","components/CharSearch.js","components/Main.js","App.js","index.js"],"names":["module","exports","Header","className","href","src","logo","width","height","alt","Link","to","Footer","ClassJob","props","newJobData","oldJobData","classjobName","classjobLevel","undefined","value","currentExp","max","maxExp","xiv","XIVAPI","getXivapiData","char_id","a","character","get","result","console","error","getMongooseData","axios","response","data","log","CharacterSheet","characterId","match","params","charId","useState","charName","charServer","charAvatar","charPortrait","charClasses","achievementCount","achievementPoints","minionCount","mountCount","freshCharacter","setFreshCharacter","oldCharacter","setOldCharacter","useEffect","then","jobList","Character","ClassJobs","map","job","UnlockedState","Name","classjobFullname","Level","ExpLevel","ExpLevelMax","newCharData","Server","Avatar","Portrait","Minions","length","Mounts","onClick","post","classJob","oldJob","key","getUserData","userToken","removeUserChar","userInfo","newCharList","savedCharacters","filter","idNumber","put","userId","userIdentity","idList","handleClickRemove","event","preventDefault","target","dataset","user","char","charIdList","UserPage","setUserInfo","registeredChars","setRegisteredChars","output","entry","class","data-char","data-user","CharSearch","serverList","state","serverName","searchResults","handleInputChange","bind","handleSubmit","name","this","setState","e","search","server","Results","onSubmit","htmlFor","type","id","onChange","required","list","ID","Component","Main","App","BrowserRouter","Route","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e5b46cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2ea2ba20.png\";","// this is for the header menu bar\r\n\r\n// imports\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport logo from \"../logo.png\";\r\n\r\n// define component\r\nfunction Header(){\r\n    return (\r\n        <header className=\"header\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" href=\"/\">\r\n                    <img src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"logo\"/> XIV Character Tracker\r\n                </a>\r\n\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link className=\"nav-link\" to=\"/search\">Search</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to={`/user/test`} className=\"nav-link\">User Page</Link>\r\n                    </li>\r\n                </ul>\r\n                <button>Login/out button would go here if it worked</button>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\n// export component\r\nexport default Header;","// imports\r\nimport React from \"react\";\r\n\r\n// define component\r\nfunction Footer(){\r\n    return (\r\n        <footer className=\"footer\">\r\n            Made by <a href=\"https:github.com/arbdt\">Arbdt</a> in 2021 using <a href=\"https://reactjs.org/\">React</a> and <a href=\"https://mongoosejs.com/\">Mongoose</a>.\r\n             Powered by <a href=\"https://github.com/xivapi/xivapi-js\">XIVAPI</a>. FFXIV &copy; 2010 Square Enix.\r\n        </footer>\r\n    );\r\n}\r\n\r\n// export component\r\nexport default Footer;","// this component will display data for each of a characters class/jobs, specifically name and progress\r\n\r\n// old and new data is compared, and the difference is displayed alongside the current values\r\n\r\n//imports\r\nimport React from \"react\";\r\n\r\n// component definition\r\nfunction ClassJob(props){\r\n    let newJobData = props.newJobData;\r\n    let oldJobData = props.oldJobData;\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <h4>{newJobData.classjobName}</h4>\r\n                <p>Level: {newJobData.classjobLevel} {oldJobData.classjobLevel !== undefined && oldJobData.classjobLevel < newJobData.classjobLevel ?\r\n                <span className=\"trackedChange\"> +{newJobData.classjobLevel - oldJobData.classjobLevel}</span> : <></>}</p>\r\n                <meter value={newJobData.currentExp} max={newJobData.maxExp}>\r\n                    {newJobData.currentExp} / {newJobData.maxExp}\r\n                </meter>\r\n                <p>Experience: {newJobData.currentExp} / {newJobData.maxExp} {newJobData.classjobLevel === oldJobData.classjobLevel && newJobData.currentExp > oldJobData.currentExp ?\r\n                <span className=\"trackedChange\"> +{newJobData.currentExp - oldJobData.currentExp}</span> : <></>}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// export component\r\nexport default ClassJob;","// this component is for a page or section to display the retrieved and/or saved details for a specified character\r\n\r\n// imports\r\nimport React, {useEffect, useState} from \"react\";\r\nimport ClassJob from \"./ClassJob\";\r\nimport axios from \"axios\";\r\nimport XIVAPI from \"xivapi-js\";\r\nconst xiv = new XIVAPI();\r\n\r\n// function to retrieve data from XIVAPI\r\nconst getXivapiData = async (char_id) => {\r\n    try{\r\n        let result = await xiv.character.get(char_id);\r\n        return result;\r\n    } catch(error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n// call API to get existing information from server\r\nconst getMongooseData = async (character) => {\r\n    try {\r\n        let response = await axios.get(`/api/character/${character}`);\r\n        if (response.data !== null){\r\n            // return the data if it exists\r\n            console.log(response.data);\r\n            return response.data;\r\n        }\r\n    } catch (error){\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n// function to save data\r\nfunction saveCharData(character){\r\n// post character data to db\r\n    axios.post(`/api/character`, character);\r\n}\r\n\r\n// define component\r\nfunction CharacterSheet(props){\r\n    // vars\r\n    let characterId = props.match.params.charId; // get charId from URL\r\n    \r\n    // useState to store xivapi character data\r\n    let [freshCharacter, setFreshCharacter] = useState({\r\n        charId: 0,\r\n        charName: \"\",\r\n        charServer: \"\",\r\n        charAvatar: \"\",\r\n        charPortrait: \"\",\r\n        charClasses: [],\r\n        achievementCount: 0,\r\n        achievementPoints: 0,\r\n        minionCount: 0,\r\n        mountCount: 0,\r\n    });\r\n\r\n    // useState to store database character data\r\n    let [oldCharacter, setOldCharacter] = useState({\r\n        charId: 0,\r\n        charName: \"\",\r\n        charServer: \"\",\r\n        charAvatar: \"\",\r\n        charPortrait: \"\",\r\n        charClasses: [],\r\n        achievementCount: 0,\r\n        achievementPoints: 0,\r\n        minionCount: 0,\r\n        mountCount: 0,\r\n    });\r\n\r\n\r\n\r\n    // useEffect to call XIVAPI for new information\r\n    useEffect( () =>{\r\n\r\n        // get XIVAPI data\r\n        getXivapiData(characterId).then( (result) => {\r\n            console.log(result);\r\n            let jobList = result.Character.ClassJobs.map( (job) => {\r\n                return {\r\n                    charId: characterId,\r\n                    classjobName: job.UnlockedState.Name,\r\n                    classjobFullname: job.Name,\r\n                    classjobLevel: job.Level,\r\n                    currentExp: job.ExpLevel,\r\n                    maxExp: job.ExpLevelMax}\r\n            });\r\n            // make new character object from new data\r\n            let newCharData = {\r\n                charId: characterId,\r\n                charName: result.Character.Name,\r\n                charServer: result.Character.Server,\r\n                charAvatar: result.Character.Avatar,\r\n                charPortrait: result.Character.Portrait,\r\n                charClasses: jobList,\r\n                minionCount: result.Minions.length,\r\n                mountCount: result.Mounts.length\r\n            };\r\n            // update state with new data\r\n            setFreshCharacter(newCharData);\r\n        });\r\n\r\n        // get database data\r\n        getMongooseData(characterId).then( result => {\r\n            let oldCharData = result;\r\n            setOldCharacter(oldCharData);\r\n        });\r\n    \r\n    },[characterId]);\r\n\r\n    // component output    \r\n    return(\r\n        <div className=\"card characterSheet\">\r\n            <h3 className=\"card-title\">{freshCharacter.charName} of {freshCharacter.charServer} </h3>\r\n            \r\n            <div className=\"card-body\">\r\n            <button onClick={() => saveCharData(freshCharacter)}><i className=\"fas fa-save\"></i> Save</button>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <p>Minions: {freshCharacter.minionCount} {oldCharacter !== undefined && freshCharacter.minionCount > oldCharacter.minionCount ?\r\n                            <span className=\"trackedChange\"> +{freshCharacter.minionCount - oldCharacter.minionCount}</span> : <></>}</p>\r\n                        <p>Mounts: {freshCharacter.mountCount} {oldCharacter !== undefined && freshCharacter.mountCount > oldCharacter.mountCount ?\r\n                            <span className=\"trackedChange\"> +{freshCharacter.mountCount - oldCharacter.mountCount}</span> : <></>}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <img src={freshCharacter.charAvatar} alt={freshCharacter.charName}/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {freshCharacter.charClasses !== undefined? freshCharacter.charClasses.map( (classJob) => {\r\n                            let oldJob = {};\r\n                            if (oldCharacter !== undefined){\r\n                                for (const job of oldCharacter.charClasses){\r\n                                    if (job.classjobFullname === classJob.classjobFullname){\r\n                                        oldJob = job;\r\n                                    }\r\n                                }\r\n                            }\r\n                            return (\r\n                                <ClassJob newJobData={classJob} oldJobData={oldJob} key={classJob.classjobName}></ClassJob>\r\n                            );\r\n                        }) : <></>}\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n // export component\r\n export default CharacterSheet;","// this component is displayed to logged-in users\r\n// it will display a list of saved characters with options to delete or refresh each character, or click on a character for details\r\n\r\n// imports\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// function to call database to retrieve user-associated content\r\nconst getUserData = async (userToken) => {\r\n    try {\r\n        let response = await axios.get(`/api/user/${userToken}`);\r\n        if (response.data !== null){\r\n            // return the data if it exists\r\n            return response.data;\r\n        }\r\n    } catch (error){\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n// function to update user-associated content (for removing a tracked character)\r\nconst removeUserChar = async (userInfo, charId) =>{\r\n        let newCharList = userInfo.savedCharacters.filter(function (idNumber){\r\n        return idNumber !== charId;\r\n    });\r\n    try {\r\n        let response = await axios.put(\"/api/user/characters/remove\", {userId: userInfo.userIdentity, idList: newCharList});\r\n        if (response.data !== null){\r\n            return response.data;\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n// function to handle clicking on \"remove\"\r\nfunction handleClickRemove(event){\r\n    event.preventDefault();\r\n\r\n    // call removeuserchar\r\n    removeUserChar(event.target.dataset.user, event.target.dataset.char);\r\n}\r\n\r\n// call API to get character information from server\r\nconst getMongooseData = async (charIdList) => {\r\n    try {\r\n        let response = await axios.post(`/api/user/characters`, {data: charIdList});\r\n        if (response.data !== null){\r\n            return response.data;\r\n        }\r\n    } catch (error){\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\n\r\n// define component\r\nfunction UserPage(props){\r\n    // vars and states\r\n    let userId = props.match.params.userId; // user identification\r\n    let [userInfo, setUserInfo] = useState();\r\n    let [registeredChars, setRegisteredChars] = useState([]);\r\n\r\n    // useEffects\r\n    useEffect(() => {\r\n        // get user data\r\n        if (userId !== undefined){\r\n            getUserData(userId).then( output => {\r\n                console.log(`retrieving user data: ${output}`);\r\n                setUserInfo(output);\r\n            });\r\n        }\r\n    },[userId]);\r\n\r\n    useEffect(() => {\r\n        // get character data\r\n        if (userInfo !== undefined && userInfo.savedCharacters !== undefined){\r\n            console.log(`retrieving character data`);\r\n            getMongooseData(userInfo.savedCharacters).then(output => {\r\n                setRegisteredChars(registeredChars => [...registeredChars, output]);\r\n            });\r\n        }\r\n    },[userInfo]);\r\n\r\n    return(\r\n    // display list of registered characters\r\n    // click through to dislay Character Sheet,\r\n    // or delete or update\r\n    <div>\r\n        <h3>Welcome User {userInfo !== undefined? userInfo.userIdentity : \"\"}!</h3>\r\n        <p>{registeredChars.length !== 0 ?  \"You've saved the following characters in our database:\" : \"You have no saved characters.\"}</p>\r\n\r\n        <div>\r\n            <ul className=\"list-group\"> {/* list to display results of search */}\r\n                {registeredChars.length !== 0 && registeredChars[0] !== undefined ? registeredChars.map( (entry) => {\r\n                    return (\r\n                        <li key={entry.charId} className=\"list-group-item\">\r\n                            <img src={entry.charAvatar} alt={entry.charName} width=\"64\" height=\"64\"/>\r\n                            &emsp; {entry.charName} &emsp; {entry.charServer}\r\n                            &emsp; <a href={\"/character/\" + entry.charId}><i class=\"fas fa-eye\"></i> View</a>\r\n                            &emsp; <button onClick={handleClickRemove} data-char={entry.charId} data-user={userInfo}><i className=\"fas fa-user-slash\"></i> Untrack</button>\r\n                        </li>\r\n                    );\r\n                })\r\n                : <></>}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    );\r\n    \r\n}\r\n\r\n// export component\r\nexport default UserPage;","// This component is a search form in which users can enter a character name and choose a server name, which will be passed to the API.\r\nimport React, {Component} from \"react\";\r\nimport XIVAPI from \"xivapi-js\";\r\nconst xiv = new XIVAPI();\r\n\r\n// define component\r\nclass CharSearch extends Component {\r\n    constructor (props){\r\n        super(props);\r\n\r\n        // state\r\n        this.state = {\r\n            charName: \"\",\r\n            serverName: \"\",\r\n            searchResults: []\r\n        };\r\n\r\n        // bind methods\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    // handle input change\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value =  target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n\r\n    // option array\r\n    serverList = [\"Adamantoise\", \"Aegis\", \"Alexander\", \"Anima\", \"Asura\", \"Atomos\",\r\n    \"Bahamut\", \"Balmung\", \"Behemoth\", \"Belias\", \"Brynhildr\",\r\n    \"Cactuar\", \"Carbuncle\", \"Cerberus\", \"Chocobo\", \"Coeurl\",\r\n    \"Diabolos\", \"Durandal\", \"Excalibur\", \"Exodus\", \"Faerie\",\"Famfrit\", \"Fenrir\",\r\n    \"Garuda\", \"Gilgamesh\", \"Goblin\", \"Gungnir\", \"Hades\", \"Hyperion\",\r\n    \"Ifrit\", \"Ixion\", \"Jenova\", \"Kujata\", \"Lamia\", \"Leviathan\", \"Lich\", \"Louisoix\", \r\n    \"Malboro\", \"Mandragora\", \"Masamune\", \"Mateus\", \"Midgardsormr\", \"Moogle\",\r\n    \"Odin\", \"Omega\", \"Pandemonium\", \"Phoenix\", \"Ragnarok\",\"Ramuh\", \"Ridill\",\r\n    \"Sargatanas\", \"Shinryu\", \"Shiva\", \"Siren\", \"Tiamat\",  \"Titan\", \"Tonberry\", \"Typhon\",\r\n    \"Ultima\", \"Ultros\", \"Unicorn\", \"Valefor\", \"Yojimbo\", \"Zalera\", \"Zeromus\", \"Zodiark\"];\r\n\r\n    // search submission method\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        // run search based on user input\r\n        console.log(`searching for ${this.state.charName} of ${this.state.serverName}`);\r\n        xiv.character.search(this.state.charName, {server: this.state.serverName}).then( (response) => {\r\n            console.log(response);\r\n            this.setState({searchResults: response.Results});\r\n        });\r\n    }\r\n\r\n// define component output\r\nrender(){\r\n    return (\r\n        <div className=\"card m-4\">\r\n            <form className=\"form card-body\" onSubmit={this.handleSubmit}>{/* form for searching via API */}\r\n                <h3 className=\"card-title\">Search for a character</h3>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"charSearchInput\">Character Name: </label>\r\n                    <input className=\"form-control\" type=\"text\" id=\"charSearchInput\" name=\"charName\" onChange={this.handleInputChange} required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"charServerInput\">Server: </label>\r\n                    <input className=\"form-control\" list=\"xivServers\" id=\"charServerInput\" name=\"serverName\" onChange={this.handleInputChange} required/>    \r\n                        <datalist id=\"xivServers\">\r\n                            {this.serverList.map( (server) => {\r\n                                return (<option key={server} value={server}/>);\r\n                            })}\r\n                        </datalist>\r\n                </div>\r\n                <button className=\"btn\" type=\"submit\"><i className=\"fas fa-search\"></i> Search</button>\r\n            </form>\r\n            <div>\r\n                <ul className=\"list-group\"> {/* list to display results of search */}\r\n                    {this.state.searchResults !== undefined ? this.state.searchResults.map( (entry) => {\r\n                        return (\r\n                            <li className=\"list-group-item\" key={entry.ID}>\r\n                                <img src={entry.Avatar} alt={entry.Name} width=\"64\" height=\"64\"/>\r\n                                &emsp; {entry.Name}\r\n                                &emsp; <a href={\"/character/\" + entry.ID}><i className=\"fas fa-eye\"></i> View</a>\r\n                            </li>\r\n                        );\r\n                    })\r\n                    : <></>}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n}\r\n// export module\r\nexport default CharSearch;","// this component represents the initial landing page of the website\r\n\r\n// imports\r\nimport React from \"react\";\r\nimport CharSearch from \"./CharSearch\";\r\n\r\n// component definition\r\nfunction Main(){\r\n\r\n    // output visual content\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <h1 className=\"display-4\">FFX|V Character Tracker</h1>\r\n            <p className=\"lead\">Welcome to the X|V Character Tracker. Use the form below to find and display the profile of a character.</p>\r\n            <hr className=\"my-4\"/>\r\n            <p>Log in using [insert authorisation service here] to save a character's current stats for comparison.</p>\r\n            <div className=\"lead\"><CharSearch></CharSearch></div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// export component\r\nexport default Main;","// import components\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport CharacterSheet from \"./components/CharacterSheet\";\nimport UserPage from \"./components/UserPage\";\nimport CharSearch from \"./components/CharSearch\";\nimport Main from \"./components/Main\";\n\n// define component\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <div>\n        <Header/>\n        <main className=\"container\">\n          <Route path=\"/character/:charId\" component={CharacterSheet}></Route>\n          <Route path=\"/user/:userId\" component={UserPage}></Route>\n          <Route path=\"/search\" component={CharSearch}></Route>\n          <Route exact path= \"/\" component={Main}></Route>\n        </main>\n        <Footer/>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\n// export component\nexport default App;\n","// imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/index.css\"; // style sheet\nimport App from './App';\n\n// render react index app etc\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}