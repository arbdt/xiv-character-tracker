{"version":3,"sources":["logo.png","components/LoginButton.js","components/LogoutButton.js","components/AuthenticationButton.js","components/AuthNav.js","components/Header.js","components/Footer.js","components/ClassJob.js","components/CharacterSheet.js","components/UserPage.js","components/CharSearch.js","components/Main.js","App.js","auth/auth0-provider-with-history.js","index.js"],"names":["module","exports","LoginButton","loginWithRedirect","useAuth0","className","onClick","LogoutButton","logout","returnTo","window","location","origin","AuthenticationButton","isAuthenticated","user","a","Axios","post","userId","sub","then","result","data","console","log","error","makeUserData","AuthNav","Header","href","src","logo","width","height","alt","to","Footer","ClassJob","props","newJobData","oldJobData","classjobName","classjobLevel","undefined","value","currentExp","max","maxExp","xiv","XIVAPI","CharacterSheet","characterId","match","params","charId","useState","charName","charServer","charAvatar","charPortrait","charClasses","achievementCount","achievementPoints","minionCount","mountCount","oldCharacter","setOldCharacter","freshCharacter","setFreshCharacter","useEffect","getMongooseData","oldCharData","getXivapiData","jobList","Character","ClassJobs","map","job","UnlockedState","Name","classjobFullname","Level","ExpLevel","ExpLevelMax","newCharData","Server","Avatar","Portrait","Minions","length","Mounts","char_id","character","get","axios","response","saveCharData","output","event","preventDefault","target","classJob","oldJob","key","withAuthenticationRequired","isLoading","savedCharIds","setSavedCharIds","savedCharData","setSavedCharData","getUserData","savedCharacters","getCharData","userToken","removeUserChar","put","handleClickRemove","dataset","char","charIdList","entry","data-char","data-user","CharSearch","serverList","handleCharSave","e","saveCharToUser","charid","state","serverName","searchResults","handleInputChange","bind","handleSubmit","name","this","setState","search","server","Results","auth0","onSubmit","htmlFor","type","id","onChange","required","list","ID","data-charid","data-charname","data-charserver","data-charavatar","Component","withAuth0","Main","App","path","component","UserPage","exact","Auth0ProviderWithHistory","children","domain","process","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","history","useHistory","redirectUri","onRedirectCallback","appState","push","pathname","ReactDOM","render","document","getElementById"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,kC,0fCkB5BC,EAZK,WAAO,IACjBC,EAAsBC,cAAtBD,kBACR,OACE,4BACEE,UAAU,4BACVC,QAAS,kBAAMH,MAFjB,WCaWI,EAhBM,WAAO,IAClBC,EAAWJ,cAAXI,OACR,OACE,4BACEH,UAAU,2BACVC,QAAS,kBACPE,EAAO,CACLC,SAAUC,OAAOC,SAASC,WAJhC,Y,iBC8BWC,EA5Bc,WAAO,IAC1BC,EAAoBV,cAApBU,gBACDC,EAAQX,cAARW,KAqBP,OAJID,GAdc,uCAAG,sBAAAE,EAAA,0DACbD,EADa,yCAGPE,IAAMC,KAAK,YAAa,CAACC,OAAQJ,EAAKK,MAAMC,MAAM,SAAAC,GAClC,OAAhBA,EAAOC,MACTC,QAAQC,IAAI,0BALH,sDASbD,QAAQE,MAAR,MATa,wDAAH,oDAehBC,GAIAb,EAAiB,kBAAC,EAAD,MAAmB,kBAAC,EAAD,OCvBzBc,EANC,kBACd,yBAAKvB,UAAU,sBACb,kBAAC,EAAD,QCyBWwB,MAxBf,WACI,OACI,4BAAQxB,UAAU,UACd,yBAAKA,UAAU,iDACX,uBAAGA,UAAU,eAAeyB,KAAK,KAC7B,yBAAKC,IAAKC,IAAMC,MAAM,KAAKC,OAAO,KAAK7B,UAAU,2BAA2B8B,IAAI,SADpF,0BAIA,wBAAI9B,UAAU,cACV,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,WAAW+B,GAAG,WAA9B,WAEJ,wBAAI/B,UAAU,YACV,kBAAC,IAAD,CAAM+B,GAAE,QAAW/B,UAAU,YAA7B,eAIR,kBAAC,EAAD,SCZDgC,MAVf,WACI,OACI,4BAAQhC,UAAU,UAAlB,WACY,uBAAGyB,KAAK,0BAAR,SADZ,kBACqE,uBAAGA,KAAK,wBAAR,SADrE,QACkH,uBAAGA,KAAK,2BAAR,YADlH,gBAEgB,uBAAGA,KAAK,uCAAR,UAFhB,mD,yBCyBOQ,MAvBf,SAAkBC,GACd,IAAIC,EAAaD,EAAMC,WACnBC,EAAaF,EAAME,WAEvB,OACA,yBAAKpC,UAAU,OACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAcmC,EAAWE,cACvC,uBAAGrC,UAAU,aAAY,0BAAMA,UAAU,oBAAhB,UAAzB,IAA2EmC,EAAWG,cAAtF,SAAmIC,IAA7BH,EAAWE,eAA+BF,EAAWE,cAAgBH,EAAWG,cACtL,0BAAMtC,UAAU,iBAAhB,MAAoCmC,EAAWG,cAAgBF,EAAWE,cAA1E,KAAmG,sCACnG,2BAAOE,MAAOL,EAAWM,WAAYC,IAAKP,EAAWQ,QAChDR,EAAWM,WADhB,MAC+BN,EAAWQ,QAE1C,uBAAG3C,UAAU,aAAY,0BAAMA,UAAU,oBAAhB,SAAzB,IAA0EmC,EAAWM,WAArF,MAAoGN,EAAWQ,OAA/G,IAAwHR,EAAWG,gBAAkBF,EAAWE,eAAiBH,EAAWM,WAAaL,EAAWK,WACpN,0BAAMzC,UAAU,iBAAhB,MAAoCmC,EAAWM,WAAaL,EAAWK,WAAvE,KAA6F,0C,iBCfvGG,EAAM,IAAIC,IAuLAC,MAlLhB,SAAwBZ,GAEpB,IAAIa,EAAcb,EAAMc,MAAMC,OAAOC,OAC9BxC,EAAQX,cAARW,KAHmB,EAMYyC,mBAAS,CAC3CD,OAAQ,EACRE,SAAU,qBACVC,WAAY,qBACZC,WAAY,GACZC,aAAc,GACdC,YAAa,GACbC,iBAAkB,EAClBC,kBAAmB,EACnBC,YAAa,EACbC,WAAY,IAhBU,mBAMrBC,EANqB,KAMPC,EANO,OAoBgBX,mBAAS,CAC/CD,OAAQ,EACRE,SAAU,GACVC,WAAY,GACZC,WAAY,GACZC,aAAc,GACdC,YAAa,GACbC,iBAAkB,EAClBC,kBAAmB,EACnBC,YAAa,EACbC,WAAY,IA9BU,mBAoBrBG,EApBqB,KAoBLC,EApBK,KAkC1BC,qBAAU,WAENC,EAAgBnB,GAAa/B,MAAM,SAAAC,GAC/B,IAAIkD,EAAclD,EAClBE,QAAQC,IAAI,uCACGmB,IAAXtB,GACA6C,EAAgBK,QAGzB,CAACpB,IAGJkB,qBAAW,WAGPG,EAAcrB,GAAa/B,MAAM,SAACC,GAE9B,IAAIoD,EADJlD,QAAQC,IAAI,oDAEuB,OAA/BH,EAAOqD,UAAUC,YACjBF,EAAUpD,EAAOqD,UAAUC,UAAUC,KAAK,SAACC,GACvC,MAAO,CACHvB,OAAQH,EACRV,aAAcoC,EAAIC,cAAcC,KAChCC,iBAAkBH,EAAIE,KACtBrC,cAAemC,EAAII,MACnBpC,WAAYgC,EAAIK,SAChBnC,OAAQ8B,EAAIM,iBAKxB,IAAIC,EAAc,CACd9B,OAAQH,EACRK,SAAUnC,EAAOqD,UAAUK,KAC3BtB,WAAYpC,EAAOqD,UAAUW,OAC7B3B,WAAYrC,EAAOqD,UAAUY,OAC7B3B,aAActC,EAAOqD,UAAUa,SAC/B3B,YAAaa,EACbV,YAAiC,OAAnB1C,EAAOmE,QAAkBnE,EAAOmE,QAAQC,OAAS,KAC/DzB,WAA+B,OAAlB3C,EAAOqE,OAAiBrE,EAAOqE,OAAOD,OAAS,MAGhC,OAA5BL,EAAYrB,aAAmD,OAA3BqB,EAAYpB,YAAmD,OAA5BoB,EAAYxB,aACnFrC,QAAQC,IAAI,2EACZ4C,EAAkBH,IAElBG,EAAkBgB,QAG5B,CAACjC,EAAac,IAMhB,IAAMO,EAAa,uCAAG,WAAOmB,GAAP,eAAA5E,EAAA,+EAEKiC,EAAI4C,UAAUC,IAAIF,EAAS,CAACrE,KAAK,YAFtC,cAEVD,EAFU,yBAGPA,GAHO,gCAKdE,QAAQE,MAAR,MALc,yDAAH,sDAUb6C,EAAe,uCAAG,WAAOsB,GAAP,eAAA7E,EAAA,+EAEK+E,IAAMD,IAAN,yBAA4BD,IAFjC,UAGM,QADlBG,EAFY,QAGHzE,KAHG,yCAKLyE,EAASzE,MALJ,uDAQhBC,QAAQE,MAAR,MARgB,yDAAH,sDAsBfuE,EAAe,SAACJ,GAElBE,IAAM7E,KAAN,iBAA6B2E,GAAWxE,MAAM,SAAA6E,GAC3B,OAAXA,GACA1E,QAAQC,IAAI,sCAOxB,OACI,yBAAKpB,UAAU,2BACX,wBAAIA,UAAU,eAA2C,KAA5B+D,EAAeX,SAAf,UAAoCW,EAAeX,SAAnD,eAAkEW,EAAeV,YAAjF,kBAA7B,cAEcd,IAAT7B,GACD,4BAAQV,UAAU,8BAA8BC,QAzBtC,SAAC6F,GACnBA,EAAMC,iBAENH,EAAa7B,GAEb+B,EAAME,OAAOhG,UAAU,kCAoByD,uBAAGA,UAAU,gBAAkB,0BAAMA,UAAU,sBAAhB,yBAE3G,yBAAKA,UAAU,aAEX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,yBAAK0B,IAAKqC,EAAeT,WAAYxB,IAAKiC,EAAeX,YAE7D,yBAAKpD,UAAU,SACX,2BAAG,0BAAMA,UAAU,oBAAhB,YAAH,IAAuD+D,EAAeJ,YAAtE,SAAqGpB,IAAjBsB,GAA8BE,EAAeJ,YAAcE,EAAaF,YACxJ,0BAAM3D,UAAU,iBAAhB,MAAoC+D,EAAeJ,YAAcE,EAAaF,YAA9E,KAAqG,sCACzG,2BAAG,0BAAM3D,UAAU,oBAAhB,WAAH,IAAsD+D,EAAeH,WAArE,SAAmGrB,IAAjBsB,GAA8BE,EAAeH,WAAaC,EAAaD,WACrJ,0BAAM5D,UAAU,iBAAhB,MAAoC+D,EAAeH,WAAaC,EAAaD,WAA7E,KAAmG,wCAG/G,yBAAK5D,UAAU,aACX,yBAAKA,UAAU,OACX,kDAEJ,yBAAKA,UAAU,uBACqBuC,IAA/BwB,EAAeP,YAA2BO,EAAeP,YAAYgB,KAAK,SAACyB,GACxE,IAAIC,EAAS,GACb,QAAqB3D,IAAjBsB,GAA8BA,EAAaL,cAAgB,GAAG,CAAC,IAAD,gBAC5CK,EAAaL,aAD+B,IAC9D,2BAA2C,CAAC,IAAjCiB,EAAgC,QACnCA,EAAIG,mBAAqBqB,EAASrB,mBAClCsB,EAASzB,IAH6C,+BAOlE,OACI,kBAAC,EAAD,CAAUtC,WAAY8D,EAAU7D,WAAY8D,EAAQC,IAAKF,EAAS5D,kBAErE,0CCpCd+D,mBAzIf,SAAkBlE,GAAM,MAEuBnC,cAApCW,EAFa,EAEbA,KAAMD,EAFO,EAEPA,gBAAiB4F,EAFV,EAEUA,UAG1BvF,EAAS,GACbK,QAAQC,IAAR,2BAAgCX,IAC3BA,GACDU,QAAQC,IAAR,qBAA0BiF,IAE3B5F,IAEKK,EAASJ,EAAKK,IACdI,QAAQC,IAAR,mBAbY,MAkBkB+B,mBAAS,IAlB3B,mBAkBfmD,EAlBe,KAkBDC,EAlBC,OAmBoBpD,mBAAS,IAnB7B,mBAmBfqD,EAnBe,KAmBAC,EAnBA,KAsBpBxC,qBAAU,WAES,KAAXnD,GACA4F,EAAY5F,GAAQE,MAAM,SAAA6E,GACtBU,EAAgBV,EAAOc,sBAGjC,CAAC7F,IAEHmD,qBAAU,WAES,KAAXnD,GAAiBwF,IAAiB,KAClCnF,QAAQC,IAAR,8BACAwF,EAAYN,GAActF,MAAK,SAAA6E,GAC1BY,EAAiBZ,SAG5B,CAACS,IAIH,IAAMI,EAAW,uCAAG,WAAOG,GAAP,eAAAlG,EAAA,+EAES+E,IAAMD,IAAN,oBAAuBoB,IAFhC,UAGU,QADlBlB,EAFQ,QAGCzE,KAHD,yCAKDyE,EAASzE,MALR,uDAQZC,QAAQE,MAAR,MARY,yDAAH,sDAaXyF,EAAc,uCAAG,WAAOhG,EAAQoC,GAAf,eAAAvC,EAAA,6DACnBQ,QAAQC,IAAR,yCAA8C8B,EAA9C,mBADmB,kBAGMwC,IAAMqB,IAAI,8BAA+B,CAACjG,OAAQA,EAAQoC,OAAQA,IAHxE,UAIO,QADlByC,EAHW,QAIFzE,KAJE,yCAKJyE,EAASzE,MALL,uDAQfC,QAAQE,MAAR,MARe,yDAAH,wDAad2F,EAAoB,SAAClB,GACvBA,EAAMC,iBAGNe,EAAehB,EAAME,OAAOiB,QAAQvG,KAAMoF,EAAME,OAAOiB,QAAQC,MAAMlG,MAAM,SAAA6E,GACvEU,EAAgBV,EAAOc,oBAI3Bb,EAAME,OAAOhG,UAAY,qBAIvB4G,EAAW,uCAAG,WAAOO,GAAP,eAAAxG,EAAA,sEAEZQ,QAAQC,IAAR,4CAAiD+F,IAFrC,SAGSzB,IAAM7E,KAAN,uBAAmC,CAACK,KAAMiG,IAHnD,UAIU,QADlBxB,EAHQ,QAICzE,KAJD,yCAKDyE,EAASzE,MALR,uDAQZC,QAAQE,MAAR,MARY,yDAAH,sDAajB,OAIA,yBAAKrB,UAAU,qBACX,wBAAIA,UAAU,eAAd,mBACA,yBAAKA,UAAU,aACX,uBAAGA,UAAU,aAAsC,IAAzBwG,EAAcnB,OAAgB,yDAA2D,iCACnH,6BACI,wBAAIrF,UAAU,uBAAd,IAC8B,IAAzBwG,EAAcnB,aAAqC9C,IAArBiE,EAAc,GAAmBA,EAAchC,KAAK,SAAC4C,GAChF,OACA,wBAAIjB,IAAKiB,EAAMlE,OAAQlD,UAAU,qEAC7B,yBAAKA,UAAU,OACX,yBAAK0B,IAAK0F,EAAM9D,WAAYxB,IAAKsF,EAAMhE,SAAUxB,MAAM,KAAKC,OAAO,QAEvE,yBAAK7B,UAAU,wBACVoH,EAAMhE,UAEX,yBAAKpD,UAAU,OACVoH,EAAM/D,YAEX,yBAAKrD,UAAU,OACX,uBAAGA,UAAU,kBAAkByB,KAAM,cAAgB2F,EAAMlE,QAAQ,uBAAGlD,UAAU,eAAiB,0BAAMA,UAAU,sBAAhB,WAErG,yBAAKA,UAAU,OACX,4BAAQA,UAAW,iBAAiBC,QAAS+G,EAAmBK,YAAWD,EAAMlE,OAAQoE,YAAWxG,GAChG,uBAAGd,UAAU,sBAAwB,0BAAMA,UAAU,sBAAhB,kBAKnD,4C,qDCjIhB4C,EAAM,IAAIC,IAGV0E,E,kDACF,WAAarF,GAAO,IAAD,8BACf,cAAMA,IA0BVsF,WAAa,CAAC,cAAe,QAAS,YAAa,QAAS,QAAS,SACrE,UAAW,UAAW,WAAY,SAAU,YAC5C,UAAW,YAAa,WAAY,UAAW,SAC/C,WAAY,WAAY,YAAa,SAAU,SAAS,UAAW,SACnE,SAAU,YAAa,SAAU,UAAW,QAAS,WACrD,QAAS,QAAS,SAAU,SAAU,QAAS,YAAa,OAAQ,WACpE,UAAW,aAAc,WAAY,SAAU,eAAgB,SAC/D,OAAQ,QAAS,cAAe,UAAW,WAAW,QAAS,SAC/D,aAAc,UAAW,QAAS,QAAS,SAAW,QAAS,WAAY,SAC3E,SAAU,SAAU,UAAW,UAAW,UAAW,SAAU,UAAW,WApCvD,EAgEnBC,eAAiB,SAACC,GACdA,EAAE3B,iBAGF,EAAK4B,eAAeD,EAAE1B,OAAOiB,QAAQvG,KAAMgH,EAAE1B,OAAOiB,QAAQW,QAE5DF,EAAE1B,OAAOhG,UAAU,qBAlEnB,EAAK6H,MAAQ,CACTzE,SAAU,GACV0E,WAAY,GACZC,cAAe,IAInB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAZL,E,8DAgBDnC,GACd,IAAME,EAASF,EAAME,OACfxD,EAASwD,EAAOxD,MAChB2F,EAAOnC,EAAOmC,KAEpBC,KAAKC,SAAL,eACGF,EAAO3F,M,mCAiBDkF,GAAI,IAAD,OACZA,EAAE3B,iBAGF5E,QAAQC,IAAR,wBAA6BgH,KAAKP,MAAMzE,SAAxC,eAAuDgF,KAAKP,MAAMC,aAClElF,EAAI4C,UAAU8C,OAAOF,KAAKP,MAAMzE,SAAU,CAACmF,OAAQH,KAAKP,MAAMC,aAAa9G,MAAM,SAAC2E,GAC9E,EAAK0C,SAAS,CAACN,cAAepC,EAAS6C,e,8EAK1B9H,EAAM8E,G,wEAEvBrE,QAAQC,IAAR,yC,kBAE2BR,IAAMmG,IAAI,2BAA4B,CAACjG,OAAQJ,EAAMwC,OAAQsC,I,OAC5D,O,OAATtE,MACXC,QAAQC,IAAI,iC,gDAGhBD,QAAQE,MAAR,M,iJAgBH,IAAD,OAEGX,EAAQ0H,KAAKlG,MAAMuG,MAAnB/H,KAEP,OACI,yBAAKV,UAAU,uBACX,wBAAIA,UAAU,eAAd,0BACA,0BAAMA,UAAU,iBAAiB0I,SAAUN,KAAKF,cAC5C,yBAAKlI,UAAU,cACX,2BAAO2I,QAAQ,mBAAf,oBACA,2BAAO3I,UAAU,eAAe4I,KAAK,OAAOC,GAAG,kBAAkBV,KAAK,WAAWW,SAAUV,KAAKJ,kBAAmBe,UAAQ,KAE/H,yBAAK/I,UAAU,cACX,2BAAO2I,QAAQ,mBAAf,YACA,2BAAO3I,UAAU,eAAegJ,KAAK,aAAaH,GAAG,kBAAkBV,KAAK,aAAaW,SAAUV,KAAKJ,kBAAmBe,UAAQ,IAC/H,8BAAUF,GAAG,cACRT,KAAKZ,WAAWhD,KAAK,SAAC+D,GACnB,OAAQ,4BAAQpC,IAAKoC,EAAQ/F,MAAO+F,SAIpD,4BAAQvI,UAAU,kBAAkB4I,KAAK,UAAS,uBAAG5I,UAAU,kBAAoB,0BAAMA,UAAU,sBAAhB,aAEvF,yBAAKA,UAAU,aACX,uBAAGA,UAAU,aAAb,gHACA,wBAAIA,UAAU,yBAAd,SACkCuC,IAA7B6F,KAAKP,MAAME,eAA+BK,KAAKP,MAAME,cAAc1C,OAAS,EAAI+C,KAAKP,MAAME,cAAcvD,KAAK,SAAC4C,GAC5G,OACI,wBAAIpH,UAAU,oEAAoEmG,IAAKiB,EAAM6B,IACzF,yBAAKjJ,UAAU,OACX,yBAAK0B,IAAK0F,EAAMlC,OAAQpD,IAAKsF,EAAMzC,KAAM/C,MAAM,KAAKC,OAAO,QAE/D,yBAAK7B,UAAU,wBACVoH,EAAMzC,MAEX,yBAAK3E,UAAU,OACVoH,EAAMnC,QAEX,yBAAKjF,UAAU,OACX,uBAAGA,UAAU,kBAAkByB,KAAM,cAAgB2F,EAAM6B,IAAI,uBAAGjJ,UAAU,eAAiB,0BAAMA,UAAU,sBAAhB,WAEjG,yBAAKA,UAAU,YACDuC,IAAT7B,GACD,4BAAQV,UAAU,kBAAkBC,QAAS,EAAKwH,eAAgBH,YAAW5G,EAAKK,IAClFmI,cAAa9B,EAAM6B,GAAIE,gBAAe/B,EAAMzC,KAAMyE,kBAAiBhC,EAAMnC,OAAQoE,kBAAiBjC,EAAMlC,QACxG,uBAAGlF,UAAU,qBAAuB,0BAAMA,UAAU,sBAAhB,gBAOlD,mE,GAhIGsJ,aAyIVC,cAAUhC,GC3HViC,MAjBf,WAGI,OACI,yBAAKxJ,UAAU,aACX,wBAAIA,UAAU,aAAd,yBACA,uBAAGA,UAAU,QAAb,4GACA,wBAAIA,UAAU,SACd,uTAGA,kBAAC,EAAD,QCkBGyJ,MAxBf,WAIE,OAFoB1J,cAAbsG,UAGG,mDAKR,yBAAKrG,UAAU,OACb,kBAAC,EAAD,MACE,0BAAMA,UAAU,aACd,kBAAC,IAAD,CAAO0J,KAAK,qBAAqBC,UAAW7G,IAC5C,kBAAC,IAAD,CAAO4G,KAAK,QAAQC,UAAWC,IAC/B,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWpC,IACjC,kBAAC,IAAD,CAAOsC,OAAK,EAACH,KAAM,IAAIC,UAAWH,KAEtC,kBAAC,EAAD,QCHSM,EAtBkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5BC,EAASC,mHAAYC,wBAA0B,4BAC/CC,EAAWF,mHAAYG,2BAA6B,mCAEpDC,EAAUC,cAMhB,OACE,kBAAC,IAAD,CACEN,OAAQA,EACRG,SAAUA,EACVI,YAAalK,OAAOC,SAASC,OAC7BiK,mBATuB,SAACC,GAC1BJ,EAAQK,MAAa,OAARD,QAAQ,IAARA,OAAA,EAAAA,EAAUrK,WAAYC,OAAOC,SAASqK,YAUhDZ,ICbPa,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.167a1239.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2ea2ba20.png\";","// this is for a login button component\r\n\r\n//content provided by Auth0\r\nimport React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary btn-block\"\r\n      onClick={() => loginWithRedirect()}\r\n    >\r\n      Log In\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;","// this is for a login button component\r\n\r\n//content provided by Auth0\r\nimport React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger btn-block\"\r\n      onClick={() =>\r\n        logout({\r\n          returnTo: window.location.origin,\r\n        })\r\n      }\r\n    >\r\n      Log Out\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","// this is a wrapper for Auth0 login and logout buttons\r\n\r\n// content is provided by Auth0\r\nimport React from \"react\";\r\n\r\nimport LoginButton from \"./LoginButton\";\r\nimport LogoutButton from \"./LogoutButton\";\r\n\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport Axios from \"axios\";\r\n\r\nconst AuthenticationButton = () => {\r\n  const { isAuthenticated } = useAuth0();\r\n  const {user} = useAuth0();\r\n\r\n  // create user DB entry on login if not exist\r\n  const makeUserData = async () => {\r\n      if (user){\r\n        try {\r\n          await Axios.post(\"/api/user\", {userId: user.sub}).then (result => {\r\n            if (result.data !== null){\r\n              console.log(\"User is registered!\");\r\n            }\r\n          });\r\n        } catch (error){\r\n          console.error(error);\r\n        }\r\n      }\r\n  }\r\n  // run make user data\r\n  if (isAuthenticated){\r\n    makeUserData();\r\n  }\r\n\r\n  return (\r\n    isAuthenticated? <LogoutButton /> : <LoginButton />\r\n  );\r\n};\r\n\r\nexport default AuthenticationButton;","// this is a navbar menu component to hold a login/out authentication button\r\n\r\n// content provided by Auth0\r\nimport React from \"react\";\r\nimport AuthenticationButton from \"./AuthenticationButton\";\r\n\r\nconst AuthNav = () => (\r\n  <div className=\"navbar-nav ml-auto\">\r\n    <AuthenticationButton />\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","// this is for the header menu bar\r\n\r\n// imports\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport logo from \"../logo.png\";\r\nimport AuthNav from \"./AuthNav\";\r\n\r\n// define component\r\nfunction Header(){\r\n    return (\r\n        <header className=\"header\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-custom\">\r\n                <a className=\"navbar-brand\" href=\"/\">\r\n                    <img src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"logo\"/> XIV Character Tracker\r\n                </a>\r\n\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link className=\"nav-link\" to=\"/search\">Search</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to={`/user`} className=\"nav-link\">User Page</Link>\r\n                    </li>\r\n                </ul>\r\n                \r\n                <AuthNav></AuthNav>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\n// export component\r\nexport default Header;","// imports\nimport React from \"react\";\n\n// define component\nfunction Footer(){\n    return (\n        <footer className=\"footer\">\n            Made by <a href=\"https:github.com/arbdt\">Arbdt</a> in 2021 using <a href=\"https://reactjs.org/\">React</a> and <a href=\"https://mongoosejs.com/\">Mongoose</a>.\n             Powered by <a href=\"https://github.com/xivapi/xivapi-js\">XIVAPI</a>. FINAL FANTASY XIV &copy; SQUARE ENIX CO., LTD.\n        </footer>\n    );\n}\n\n// export component\nexport default Footer;","// this component will display data for each of a characters class/jobs, specifically name and progress\n\n// old and new data is compared, and the difference is displayed alongside the current values\n\n//imports\nimport React from \"react\";\n\n// component definition\nfunction ClassJob(props){\n    let newJobData = props.newJobData;\n    let oldJobData = props.oldJobData;\n    \n    return (\n    <div className=\"col\">\n        <div className=\"card m-2 jobCard\">\n            <div className=\"card-body\">\n                <h4 className=\"card-title\">{newJobData.classjobName}</h4>\n                <p className=\"card-text\"><span className=\"font-weight-bold\">Level:</span> {newJobData.classjobLevel} {oldJobData.classjobLevel !== undefined && oldJobData.classjobLevel < newJobData.classjobLevel ?\n                <span className=\"trackedChange\"> (+{newJobData.classjobLevel - oldJobData.classjobLevel})</span> : <></>}</p>\n                <meter value={newJobData.currentExp} max={newJobData.maxExp}>\n                    {newJobData.currentExp} / {newJobData.maxExp}\n                </meter>\n                <p className=\"card-text\"><span className=\"font-weight-bold\">Exp.:</span> {newJobData.currentExp} / {newJobData.maxExp} {newJobData.classjobLevel === oldJobData.classjobLevel && newJobData.currentExp > oldJobData.currentExp ?\n                <span className=\"trackedChange\"> (+{newJobData.currentExp - oldJobData.currentExp})</span> : <></>}</p>\n            </div>\n        </div>\n    </div>\n    );\n}\n\n// export component\nexport default ClassJob;","// this component is for a page or section to display the retrieved and/or saved details for a specified character\n\n// imports -----\nimport React, {useEffect, useState} from \"react\";\nimport ClassJob from \"./ClassJob\";\nimport axios from \"axios\";\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport XIVAPI from \"@xivapi/js\";\nconst xiv = new XIVAPI();\n\n\n\n// define component -----\nfunction CharacterSheet(props){\n    // vars\n    let characterId = props.match.params.charId; // get charId from URL\n    const {user} = useAuth0();\n    \n    // useState to store database character data\n    let [oldCharacter, setOldCharacter] = useState({\n        charId: 0,\n        charName: \"Unable to Retrieve\",\n        charServer: \"Unable to Retrieve\",\n        charAvatar: \"\",\n        charPortrait: \"\",\n        charClasses: [],\n        achievementCount: 0,\n        achievementPoints: 0,\n        minionCount: 0,\n        mountCount: 0,\n    });\n\n    // useState to store xivapi character data\n    let [freshCharacter, setFreshCharacter] = useState({\n        charId: 0,\n        charName: \"\",\n        charServer: \"\",\n        charAvatar: \"\",\n        charPortrait: \"\",\n        charClasses: [],\n        achievementCount: 0,\n        achievementPoints: 0,\n        minionCount: 0,\n        mountCount: 0,\n    });\n    \n    // useEffect to call local database\n    useEffect(() => {\n        // get database data\n        getMongooseData(characterId).then( result => {\n            let oldCharData = result;\n            console.log(\"Searching for existing data...\");\n            if (result !== undefined){\n                setOldCharacter(oldCharData);\n            }\n        });\n    }, [characterId]);\n\n    // useEffect to call XIVAPI for new information\n    useEffect( () =>{\n\n        // get XIVAPI data\n        getXivapiData(characterId).then( (result) => {\n            console.log(\"Retrieving character data from external sources.\");\n            let jobList; // store classJobs data\n            if (result.Character.ClassJobs !== null) {\n                jobList = result.Character.ClassJobs.map( (job) => {\n                    return {\n                        charId: characterId,\n                        classjobName: job.UnlockedState.Name,\n                        classjobFullname: job.Name,\n                        classjobLevel: job.Level,\n                        currentExp: job.ExpLevel,\n                        maxExp: job.ExpLevelMax\n                    }\n                });\n            }\n            // make new character object from new data\n            let newCharData = {\n                charId: characterId,\n                charName: result.Character.Name,\n                charServer: result.Character.Server,\n                charAvatar: result.Character.Avatar,\n                charPortrait: result.Character.Portrait,\n                charClasses: jobList,\n                minionCount: (result.Minions !== null? result.Minions.length : null),\n                mountCount: (result.Mounts !== null? result.Mounts.length : null)\n            };\n            // update state with new data, accounting for errors / missing data\n            if (newCharData.minionCount === null || newCharData.mountCount === null || newCharData.charClasses === null){\n                console.log(\"Error retrieving fresh data. Attempting to display backup data instead.\")\n                setFreshCharacter(oldCharacter); // if new character data is missing, display old data if exists\n            } else {\n                setFreshCharacter(newCharData); // display newly obtained data\n            }\n        });    \n    },[characterId, oldCharacter]);\n\n    \n\n    // additional functions -----\n    // function to retrieve data from XIVAPI\n    const getXivapiData = async (char_id) => {\n        try{\n            let result = await xiv.character.get(char_id, {data:\"cj,mimo\"});\n            return result;\n        } catch(error) {\n            console.error(error);\n        }\n    }\n\n    // call API to get existing information from server\n    const getMongooseData = async (character) => {\n        try {\n            let response = await axios.get(`/api/character/${character}`);\n            if (response.data !== null){\n                // return the data if it exists\n                return response.data;\n            }\n        } catch (error){\n            console.error(error);\n        }\n    }\n\n    // button handler\n    const handleSaveBtn = (event) => {\n        event.preventDefault();\n\n        saveCharData(freshCharacter);\n\n        event.target.className=\"charSaveBtn btn btn-secondary\";\n    }\n\n    // function to save data\n    const saveCharData = (character) => {\n    // post character data to db\n        axios.post(`/api/character`, character).then( output => {\n            if (output !== null){\n                console.log(\"Character data has been saved.\")\n            }\n        });\n    }\n\n\n    // component output -----\n    return(\n        <div className=\"card m-4 characterSheet\">\n            <h3 className=\"card-header\">{freshCharacter.charName !== \"\"?  `${freshCharacter.charName} of ${freshCharacter.charServer}` : `Loading data...`}\n                &emsp;\n                {user !== undefined && \n                <button className=\"charSaveBtn btn btn-success\" onClick={handleSaveBtn}><i className=\"fas fa-save\"></i><span className=\"d-none d-md-inline\"> Save current stats</span></button> }\n            </h3>\n            <div className=\"card-body\">\n\n                <div className=\"row\">\n                    <div className=\"col-4\">\n                        <img src={freshCharacter.charAvatar} alt={freshCharacter.charName}/>\n                    </div>\n                    <div className=\"col-8\">\n                        <p><span className=\"font-weight-bold\">Minions:</span> {freshCharacter.minionCount} {oldCharacter !== undefined && freshCharacter.minionCount > oldCharacter.minionCount ?\n                            <span className=\"trackedChange\"> (+{freshCharacter.minionCount - oldCharacter.minionCount})</span> : <></>}</p>\n                        <p><span className=\"font-weight-bold\">Mounts:</span> {freshCharacter.mountCount} {oldCharacter !== undefined && freshCharacter.mountCount > oldCharacter.mountCount ?\n                            <span className=\"trackedChange\"> (+{freshCharacter.mountCount - oldCharacter.mountCount})</span> : <></>}</p>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>Classes and Jobs:</h4>\n                    </div>\n                    <div className=\"row row-cols-3\">\n                        {freshCharacter.charClasses !== undefined? freshCharacter.charClasses.map( (classJob) => {\n                            let oldJob = {};\n                            if (oldCharacter !== undefined && oldCharacter.charClasses !== []){\n                                for (const job of oldCharacter.charClasses){\n                                    if (job.classjobFullname === classJob.classjobFullname){\n                                        oldJob = job;\n                                    }\n                                }\n                            }\n                            return (\n                                <ClassJob newJobData={classJob} oldJobData={oldJob} key={classJob.classjobName}></ClassJob>\n                            );\n                        }) : <></>}\n                    </div>\n                </div>  \n            </div>\n        </div>\n    )\n}\n\n // export component\n export default CharacterSheet;","// this component is displayed to logged-in users\n// it will display a list of saved characters with options to delete or refresh each character, or click on a character for details\n\n// imports ----\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {useAuth0, withAuthenticationRequired} from \"@auth0/auth0-react\";\n\n// define component -----\nfunction UserPage(props){\n    // get Auth0 data\n    const {user, isAuthenticated, isLoading} = useAuth0();\n\n    // set userID from user object\n    let userId = \"\";\n    console.log(`isAuthenticated: ${isAuthenticated}`);\n    if (!isAuthenticated){\n        console.log(`isLoading: ${isLoading}`);\n    }\n    if(isAuthenticated){\n        //if (!isLoading){\n            userId = user.sub;\n            console.log(`userId is set.`);\n        //}\n    }\n\n    // vars and states\n    let [savedCharIds, setSavedCharIds] = useState([]);\n    let [savedCharData, setSavedCharData] = useState([]);\n\n    // useEffects ----\n    useEffect(() => {\n        // get user data from userId\n        if (userId !== \"\"){\n            getUserData(userId).then( output => {\n                setSavedCharIds(output.savedCharacters);\n            });\n        }\n    },[userId]);\n\n    useEffect(() => {\n        // get character data from user data\n        if (userId !== \"\" && savedCharIds !== [] ){\n            console.log(`Retrieving character data.`);\n            getCharData(savedCharIds).then(output => {\n                 setSavedCharData(output);\n            });\n        }\n    },[savedCharIds]);\n\n    // additional functions ----\n    // function to call database to retrieve user-associated content\n    const getUserData = async (userToken) => {\n        try {\n            let response = await axios.get(`/api/user/${userToken}`);\n            if (response.data !== null){\n                // return the data if it exists\n                return response.data;\n            }\n        } catch (error){\n            console.error(error);\n        }\n    }\n\n        // function to update user-associated content (for removing a tracked character)\n    const removeUserChar = async (userId, charId) => {\n        console.log(`Attempting to remove character ${charId} from profile.`);\n        try {\n            let response = await axios.put(\"/api/user/characters/remove\", {userId: userId, charId: charId});\n            if (response.data !== null){\n                return response.data;\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    // function to handle clicking on \"remove\"\n    const handleClickRemove = (event) => {\n        event.preventDefault();\n\n        // call removeuserchar\n        removeUserChar(event.target.dataset.user, event.target.dataset.char).then( output => {\n            setSavedCharIds(output.savedCharacters);\n\n        });\n\n        event.target.className = \"btn btn-secondary\";\n    }\n\n    // call API to get character information from server\n    const getCharData = async (charIdList) => {\n        try {\n            console.log(`Searching for characters with IDs ${charIdList}`);\n            let response = await axios.post(`/api/user/characters`, {data: charIdList});\n            if (response.data !== null){\n                return response.data;\n            }\n        } catch (error){\n            console.error(error);\n        }\n    }\n\n    // component output\n    return(\n    // display list of registered characters\n    // click through to display Character Sheet,\n    // or remove saved character\n    <div className=\"userCard card m-4\">\n        <h3 className=\"card-header\">Your Characters</h3>\n        <div className=\"card-body\">\n            <p className=\"card-text\">{savedCharData.length !== 0 ?  \"You've saved the following characters in our database:\" : \"You have no saved characters.\"}</p>\n            <div>\n                <ul className=\"list-group charList\"> {/* list to display results of search */}\n                    {savedCharData.length !== 0 && savedCharData[0] !== undefined ? savedCharData.map( (entry) => {\n                        return (\n                        <li key={entry.charId} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                            <div className=\"col\">\n                                <img src={entry.charAvatar} alt={entry.charName} width=\"64\" height=\"64\"/>\n                            </div>\n                            <div className=\"col font-weight-bold\">\n                                {entry.charName}\n                            </div>\n                            <div className=\"col\">\n                                {entry.charServer}\n                            </div>\n                            <div className=\"col\">\n                                <a className=\"btn btn-primary\" href={\"/character/\" + entry.charId}><i className=\"fas fa-eye\"></i><span className=\"d-none d-md-inline\"> View</span></a>\n                            </div>\n                            <div className=\"col\">\n                                <button className= \"btn btn-danger\" onClick={handleClickRemove} data-char={entry.charId} data-user={userId}>\n                                    <i className=\"fas fa-user-minus\"></i><span className=\"d-none d-md-inline\"> Untrack</span></button>\n                            </div>   \n                        </li>\n                        );\n                    })\n                    : <></>}\n                </ul>\n            </div>\n        </div>\n    </div>\n    );\n    \n}\n\n// export component\nexport default withAuthenticationRequired(UserPage);","// This component is a search form in which users can enter a character name and choose a server name, which will be passed to the API.\n\n// imports\nimport React, {Component} from \"react\";\nimport {withAuth0} from \"@auth0/auth0-react\";\nimport XIVAPI from \"@xivapi/js\";\nimport Axios from \"axios\";\nconst xiv = new XIVAPI();\n\n// define component\nclass CharSearch extends Component {\n    constructor (props){\n        super(props);\n\n        // state\n        this.state = {\n            charName: \"\",\n            serverName: \"\",\n            searchResults: [],\n        };\n\n        // bind methods\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // handle input change\n    handleInputChange(event) {\n        const target = event.target;\n        const value =  target.value;\n        const name = target.name;\n    \n        this.setState({\n          [name]: value\n        });\n      }\n\n    // option array\n    serverList = [\"Adamantoise\", \"Aegis\", \"Alexander\", \"Anima\", \"Asura\", \"Atomos\",\n    \"Bahamut\", \"Balmung\", \"Behemoth\", \"Belias\", \"Brynhildr\",\n    \"Cactuar\", \"Carbuncle\", \"Cerberus\", \"Chocobo\", \"Coeurl\",\n    \"Diabolos\", \"Durandal\", \"Excalibur\", \"Exodus\", \"Faerie\",\"Famfrit\", \"Fenrir\",\n    \"Garuda\", \"Gilgamesh\", \"Goblin\", \"Gungnir\", \"Hades\", \"Hyperion\",\n    \"Ifrit\", \"Ixion\", \"Jenova\", \"Kujata\", \"Lamia\", \"Leviathan\", \"Lich\", \"Louisoix\", \n    \"Malboro\", \"Mandragora\", \"Masamune\", \"Mateus\", \"Midgardsormr\", \"Moogle\",\n    \"Odin\", \"Omega\", \"Pandemonium\", \"Phoenix\", \"Ragnarok\",\"Ramuh\", \"Ridill\",\n    \"Sargatanas\", \"Shinryu\", \"Shiva\", \"Siren\", \"Tiamat\",  \"Titan\", \"Tonberry\", \"Typhon\",\n    \"Ultima\", \"Ultros\", \"Unicorn\", \"Valefor\", \"Yojimbo\", \"Zalera\", \"Zeromus\", \"Zodiark\"];\n\n    // search submission method\n    handleSubmit(e) {\n        e.preventDefault();\n\n        // run search based on user input\n        console.log(`Searching for ${this.state.charName} of ${this.state.serverName}`);\n        xiv.character.search(this.state.charName, {server: this.state.serverName}).then( (response) => {\n            this.setState({searchResults: response.Results});\n        });\n    }\n\n    // character save to user method\n    async saveCharToUser(user, character){\n        // save to user profile via api\n        console.log(`Saving character to user's profile...`);\n        try {\n            let userResult = await Axios.put(\"/api/user/characters/add\", {userId: user, charId: character});\n            if (userResult.data !== null){\n                console.log(\"User data saved successfully.\");\n            }\n        } catch (error){\n            console.error(error);\n        }\n    }\n\n    // handle saving character to user\n    handleCharSave = (e) => {\n        e.preventDefault();\n\n        // run method to associate character id with user data\n        this.saveCharToUser(e.target.dataset.user, e.target.dataset.charid);\n\n        e.target.className=\"btn btn-secondary\";\n           \n    }\n\n// define component output\nrender(){\n    //auth0 hook for user details\n    const {user} = this.props.auth0;\n\n    return (\n        <div className=\"searchCard card m-4\">\n            <h3 className=\"card-header\">Search for a character</h3>\n            <form className=\"form card-body\" onSubmit={this.handleSubmit}>{/* form for searching via API */}\n                <div className=\"form-group\">\n                    <label htmlFor=\"charSearchInput\">Character Name: </label>\n                    <input className=\"form-control\" type=\"text\" id=\"charSearchInput\" name=\"charName\" onChange={this.handleInputChange} required/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"charServerInput\">Server: </label>\n                    <input className=\"form-control\" list=\"xivServers\" id=\"charServerInput\" name=\"serverName\" onChange={this.handleInputChange} required/>    \n                        <datalist id=\"xivServers\">\n                            {this.serverList.map( (server) => {\n                                return (<option key={server} value={server}/>);\n                            })}\n                        </datalist>\n                </div>\n                <button className=\"btn btn-success\" type=\"submit\"><i className=\"fas fa-search\"></i><span className=\"d-none d-md-inline\"> Search</span></button>\n            </form>\n            <div className=\"card-body\">\n                <p className=\"card-text\">Only the first 50 results are displayed. If the character you seek is not listed, please refine your search.</p>\n                <ul className=\"list-group resultList\"> {/* list to display results of search */}\n                    {this.state.searchResults !== undefined && this.state.searchResults.length > 0 ? this.state.searchResults.map( (entry) => {\n                        return (\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={entry.ID}>\n                                <div className=\"col\">\n                                    <img src={entry.Avatar} alt={entry.Name} width=\"64\" height=\"64\"/>\n                                </div>\n                                <div className=\"col font-weight-bold\">\n                                    {entry.Name}\n                                </div>\n                                <div className=\"col\">\n                                    {entry.Server}\n                                </div>\n                                <div className=\"col\">\n                                    <a className=\"btn btn-primary\" href={\"/character/\" + entry.ID}><i className=\"fas fa-eye\"></i><span className=\"d-none d-md-inline\"> View</span></a>\n                                </div>\n                                <div className=\"col\">\n                                    {user !== undefined && \n                                    <button className=\"btn btn-success\" onClick={this.handleCharSave} data-user={user.sub}\n                                    data-charid={entry.ID} data-charname={entry.Name} data-charserver={entry.Server} data-charavatar={entry.Avatar}>\n                                    <i className=\"fas fa-user-plus\"></i><span className=\"d-none d-md-inline\"> Track</span>\n                                    </button>}\n                                </div>\n                                \n                            </li>\n                        );\n                    })\n                    : <p>No search results to display.</p>}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\n}\n// export module\nexport default withAuth0(CharSearch);","// this component represents the initial landing page of the website\n\n// imports\nimport React from \"react\";\nimport CharSearch from \"./CharSearch\";\n\n// component definition\nfunction Main(){\n\n    // output visual content\n    return (\n        <div className=\"jumbotron\">\n            <h1 className=\"display-4\">XIV Character Tracker</h1>\n            <p className=\"lead\">Welcome to the XIV Character Tracker. Use the form below to find and display the profile of a character.</p>\n            <hr className=\"my-4\"/>\n            <p>To track a character's progress, first log in using the  button above. Search for a character and click \"Track\" to register them to your user profile.\n                Then, click \"View\" to access the character's profile. Click \"Save\" to store the character's current data for later comparison.\n            </p>\n            <CharSearch></CharSearch>\n        </div>\n    );\n}\n\n// export component\nexport default Main;","// import components\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { Route} from \"react-router-dom\";\nimport CharacterSheet from \"./components/CharacterSheet\";\nimport UserPage from \"./components/UserPage\";\nimport CharSearch from \"./components/CharSearch\";\nimport Main from \"./components/Main\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n// define component\nfunction App() {\n\n  const {isLoading} = useAuth0();\n\n  if (isLoading){\n    return (<div>Page is loading...</div>);\n  }\n\n    // app rendering\n  return (\n    <div className=\"App\">\n      <Header/>\n        <main className=\"container\">\n          <Route path=\"/character/:charId\" component={CharacterSheet}></Route>\n          <Route path=\"/user\" component={UserPage}></Route>\n          <Route path=\"/search\" component={CharSearch}></Route>\n          <Route exact path= \"/\" component={Main}></Route>\n        </main>\n      <Footer/>\n    </div>\n  );\n}\n\n// export component\nexport default App;\n","// following content provided by Auth0\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nconst Auth0ProviderWithHistory = ({ children }) => {\r\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN || \"dev-cl0rszmy.au.auth0.com\";\r\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID || \"KYegJBfdFObt1ZBx1z4YZZYyp6R5iqOb\";\r\n\r\n  const history = useHistory();\r\n\r\n  const onRedirectCallback = (appState) => {\r\n    history.push(appState?.returnTo || window.location.pathname);\r\n  };\r\n\r\n  return (\r\n    <Auth0Provider\r\n      domain={domain}\r\n      clientId={clientId}\r\n      redirectUri={window.location.origin}\r\n      onRedirectCallback={onRedirectCallback}\r\n    >\r\n      {children}\r\n    </Auth0Provider>\r\n  );\r\n};\r\n\r\nexport default Auth0ProviderWithHistory;","// imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/index.css\"; // style sheet\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\"; // for Auth0\nimport Auth0ProviderWithHistory from \"./auth/auth0-provider-with-history\"; // for Auth0\n\n// render react index app etc\nReactDOM.render(\n  <Router>\n    <Auth0ProviderWithHistory>\n      <App/>  \n    </Auth0ProviderWithHistory>\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}